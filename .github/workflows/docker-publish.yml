name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️⃣ Install sbt
      - name: Install sbt
        run: |
          echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
          echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo tee /etc/apt/trusted.gpg.d/sbt.asc
          sudo apt-get update
          sudo apt-get install sbt


      # 4️⃣ Cache sbt and Ivy dependencies
      - name: Cache sbt and Ivy dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/build.sbt') }}

      # 5️⃣ Read version from build.sbt
      - name: Get project version
        id: get_version
        run: |
          VERSION=$(grep '^version :=' build.sbt | head -n 1 | sed -E 's/version := "(.*)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Project version is $VERSION"

      # 7️⃣ Run tests
      - name: Run tests
        run: sbt test

      # 6️⃣ Build Docker image using sbt-native-packager
      - name: Build Docker image
        run: sbt docker:publishLocal

      # 7️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8️⃣ Tag and push Docker image
      - name: Tag and push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/umap-api
          docker tag umap-api:$VERSION $IMAGE_NAME:$VERSION
          docker tag umap-api:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest